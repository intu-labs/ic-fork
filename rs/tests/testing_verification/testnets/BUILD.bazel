load("//rs/tests:system_tests.bzl", "system_test")
load("//rs/tests:common.bzl", "API_BOUNDARY_NODE_GUESTOS_RUNTIME_DEPS", "BOUNDARY_NODE_GUESTOS_RUNTIME_DEPS", "DEPENDENCIES", "GRAFANA_RUNTIME_DEPS", "GUESTOS_RUNTIME_DEPS", "MACRO_DEPENDENCIES", "NNS_CANISTER_RUNTIME_DEPS", "SNS_CANISTER_RUNTIME_DEPS")

package(default_visibility = ["//visibility:public"])

# the "_test" postfixes in names are dropped on purpose since this target is meant for interactive use.

system_test(
    name = "single_large_node",
    flaky = False,
    proc_macro_deps = MACRO_DEPENDENCIES,
    tags = [
        "dynamic_testnet",
        "manual",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    runtime_deps = GUESTOS_RUNTIME_DEPS + GRAFANA_RUNTIME_DEPS,
    deps = DEPENDENCIES + ["//rs/tests"],
)

system_test(
    name = "single_app_large_node",
    flaky = False,
    proc_macro_deps = MACRO_DEPENDENCIES,
    tags = [
        "dynamic_testnet",
        "manual",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    runtime_deps = GUESTOS_RUNTIME_DEPS + GRAFANA_RUNTIME_DEPS,
    deps = DEPENDENCIES + ["//rs/tests"],
)

system_test(
    name = "small",
    flaky = False,
    proc_macro_deps = MACRO_DEPENDENCIES,
    tags = [
        "dynamic_testnet",
        "manual",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    runtime_deps = GUESTOS_RUNTIME_DEPS + NNS_CANISTER_RUNTIME_DEPS + BOUNDARY_NODE_GUESTOS_RUNTIME_DEPS + GRAFANA_RUNTIME_DEPS,
    deps = DEPENDENCIES + ["//rs/tests"],
)

system_test(
    name = "small_api_boundary",
    flaky = False,
    proc_macro_deps = MACRO_DEPENDENCIES,
    tags = [
        "dynamic_testnet",
        "manual",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    runtime_deps = GUESTOS_RUNTIME_DEPS + NNS_CANISTER_RUNTIME_DEPS + API_BOUNDARY_NODE_GUESTOS_RUNTIME_DEPS + GRAFANA_RUNTIME_DEPS,
    deps = DEPENDENCIES + ["//rs/tests"],
)

system_test(
    name = "small_nns",
    flaky = False,
    proc_macro_deps = MACRO_DEPENDENCIES,
    tags = [
        "dynamic_testnet",
        "manual",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    runtime_deps = GUESTOS_RUNTIME_DEPS + NNS_CANISTER_RUNTIME_DEPS + BOUNDARY_NODE_GUESTOS_RUNTIME_DEPS + GRAFANA_RUNTIME_DEPS + [
        "@ii_dev_canister//file",
        "@nns_dapp_canister//file",
    ],
    deps = DEPENDENCIES + ["//rs/tests"],
)

system_test(
    name = "sns_testing",
    flaky = False,
    proc_macro_deps = MACRO_DEPENDENCIES,
    tags = [
        "dynamic_testnet",
        "manual",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    runtime_deps = GUESTOS_RUNTIME_DEPS + NNS_CANISTER_RUNTIME_DEPS + SNS_CANISTER_RUNTIME_DEPS + BOUNDARY_NODE_GUESTOS_RUNTIME_DEPS + GRAFANA_RUNTIME_DEPS + [
        "@ii_dev_canister//file",
        "@nns_dapp_canister//file",
        "@sns_aggregator//file",
    ],
    deps = DEPENDENCIES + ["//rs/tests"],
)

system_test(
    name = "medium",
    flaky = False,
    proc_macro_deps = MACRO_DEPENDENCIES,
    tags = [
        "dynamic_testnet",
        "manual",
    ],
    target_compatible_with = ["@platforms//os:linux"],  # requires libssh that does not build on Mac OS
    runtime_deps = GUESTOS_RUNTIME_DEPS + NNS_CANISTER_RUNTIME_DEPS + BOUNDARY_NODE_GUESTOS_RUNTIME_DEPS + GRAFANA_RUNTIME_DEPS,
    deps = DEPENDENCIES + ["//rs/tests"],
)
